//未整理部分：
help-place:506

前端系统学习与时间路线：
1. 构建静态网页：尝试使用HTML、CSS和JavaScript构建一个简单的静态网页。这可以帮助你熟悉这些语言的基本语法和用法。

2. 开发响应式网页：尝试使用CSS媒体查询和Flexbox/Grid布局来创建一个响应式的网页，使其能够适应不同的屏幕尺寸和设备。

3. 创建交互式组件：尝试使用JavaScript和DOM操作来创建一些交互式的组件，如轮播图、下拉菜单或表单验证等。这可以帮助你熟悉JavaScript的基本语法和DOM操作。

4. 使用前端框架：尝试使用流行的前端框架，如React、Vue或Angular，来开发一个动态的单页面应用（SPA）。这可以帮助你了解框架的使用方法和组件化开发的思想。

5. 与后端交互：尝试使用AJAX或Fetch等技术与后端API进行数据交互。这可以帮助你理解前后端的协作方式和数据传输的过程。

1.src-api：import request from '@/utils/request':
https://gitee.com/attojs/vue-request
2.js语法：
(1)var:
用于声明一个函数范围或全局范围的变量，并可将其初始化为一个值（可选）
var archiveBillFn = {}
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/var
(2)svg

3.teaching-systerm-vue-src-components-
(1)Breadcrumd
->css
->target:用于指示当前页面在导航层级中的位置，并通过 CSS 为各导航条目之间自动添加分隔符
https://v5.bootcss.com/docs/components/breadcrumb/
(2)Hamburger
->css
->target:一种在网站上显示导航链接的方式，通常用于移动设备和较小的屏幕。但是，CSS 汉堡菜单也可用于桌面网站。单击“汉堡包”图标后，将出现一个滑动菜单，显示在主要内容的顶部

//
vue文件组成部分解读-https://v5.bootcss.com/


7.3组会整理：
1.关于对接：
(1)版本统一：
node -v:v14.17.3
vue -v:v2
element UI -v:v2.15.13
(2)gitee
git创建四个分支,并保留一个主分支，其余三个与各自的版本结合

2.关于分工:
(1)代码复用(GPT)
(2)代码修改
主体：API接口 

3.关于进度：
->
